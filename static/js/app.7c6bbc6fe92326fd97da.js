webpackJsonp([1],{"0NFd":function(n,t){},"1VoX":function(n,t){},"2t/w":function(n,t){},"4gK4":function(n,t){},"4son":function(n,t){},"8meU":function(n,t){},"9Pdm":function(n,t){},"9TCY":function(n,t){},AJdz:function(n,t){},AeqZ:function(n,t){},CxKM:function(n,t){},DsLj:function(n,t){},DvDx:function(n,t){},ENLC:function(n,t){},FJBi:function(n,t){},G7E6:function(n,t){},HP5O:function(n,t){},HVCB:function(n,t){},Kjw2:function(n,t){},LNMR:function(n,t){},MeSo:function(n,t){},NHnr:function(n,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=e("rVsN"),s=e.n(r),i=e("MVMM"),a=e("zO6J"),o={name:"home",data:function(){return{navBar:[!1,!1,!1,!1,!1,!1],aside:!0,navToggle:!0,background:"blue"}},methods:{jump:function(n){var t=[!1,!1,!1,!1,!1,!1,!1];t[n]=!0;!0===this.navBar[n]?this.navBar=[!1,!1,!1,!1,!1,!1,!1]:this.navBar=t},removeAside:function(){this.aside=!1},jumpUrl:function(n){console.log(n)}},mounted:function(){this.$nextTick(function(){for(var n=0;n<this.$refs.navbar.children.length;n++){"router-link-active"===this.$refs.navbar.children[n].children[0].className&&this.jump(n)}})}},l={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"container",class:{blueBackground:!n.navToggle}},[e("aside",{class:{activeNar:n.aside,nonNar:!n.aside}},[e("span",[n._v("小小技术，不成敬意")]),e("b",{on:{click:function(t){n.removeAside()}}},[n._v("×")])]),n._v(" "),e("div",{staticClass:"shadow"}),n._v(" "),e("nav",[e("b",{staticClass:"interButton",class:{rotateX0:n.navToggle,rotateX90:!n.navToggle},on:{click:function(t){n.navToggle=!n.navToggle,n.removeAside()}}},[n._v("×")]),n._v(" "),e("b",{staticClass:"outButton",class:{rotateX90:n.navToggle,rotateX0:!n.navToggle},on:{click:function(t){n.navToggle=!n.navToggle}}},[e("span",{staticClass:"fa fa-reorder"})]),n._v(" "),e("ul",{ref:"navbar",class:{rotateX0:n.navToggle,rotateX90:!n.navToggle}},[e("li",{staticClass:"treeLi"},[e("router-link",{attrs:{to:"/home/vue/",append:""}},[e("b",{on:{click:function(t){n.jump(0)}}},[e("i",{staticClass:"icon-vue"}),e("span",[n._v("vue-cli开发")])])]),n._v(" "),n.navBar[0]?e("div",[e("ul",[e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/init"}},[e("span",[n._v("init")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/package"}},[e("span",[n._v("npm包")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/use"}},[e("span",[n._v("配置包")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/proxy"}},[e("span",[n._v("代理")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/build"}},[e("span",[n._v("发布")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/layout"}},[e("span",[n._v("懒加载")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/ps"}},[e("span",[n._v("psSVG")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/skin"}},[e("span",[n._v("换肤")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/listObj"}},[e("span",[n._v("数组对象")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/vue/mixin"}},[e("span",[n._v("复用的数据或方法")])])],1)])]):n._e()],1),n._v(" "),e("li",{staticClass:"treeLi"},[e("router-link",{attrs:{to:"/home/git"}},[e("b",{on:{click:function(t){n.jump(1)}}},[e("i",{staticClass:"icon-git"}),e("span",[n._v("git命令")])])]),n._v(" "),n.navBar[1]?e("div",[e("ul",[e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/git/reset"}},[e("span",[n._v("reset 版本回退")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/git/force"}},[e("span",[n._v("强制推送")])])],1)])]):n._e()],1),n._v(" "),e("li",{staticClass:"treeLi"},[e("router-link",{attrs:{to:"/home/nginx"}},[e("b",{on:{click:function(t){n.jump(2)}}},[e("i",{staticClass:"icon-nginx"}),e("span",[n._v("Nginx")])])]),n._v(" "),n.navBar[2]?e("div",[e("ul",[e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/nginx/http"}},[e("span",[n._v("http")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/nginx/wechat_https"}},[e("span",[n._v("wechat_https")])])],1)])]):n._e()],1),n._v(" "),e("li",{staticClass:"treeLi"},[e("router-link",{attrs:{to:"/home/python"}},[e("b",{on:{click:function(t){n.jump(3)}}},[e("i",{staticClass:"icon-python icon-rotate"}),e("span",[n._v("python")])])]),n._v(" "),n.navBar[3]?e("div",[e("ul",[e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/python/pythonBase"}},[e("span",[n._v("python基础")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/python/pythonCore"}},[e("span",[n._v("python核心")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/python/postgresql"}},[e("span",[n._v("postgresql")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/python/postgresqlCore"}},[e("span",[n._v("postgresqlCore")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/python/getopt"}},[e("span",[n._v("带参脚本")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/python/pythonScript"}},[e("span",[n._v("脚本demo")])])],1)])]):n._e()],1),n._v(" "),e("li",{staticClass:"treeLi"},[e("router-link",{attrs:{to:"/home/Django"}},[e("b",{on:{click:function(t){n.jump(4)}}},[e("i",{staticClass:"icon-django"}),e("span",[n._v("Django")])])]),n._v(" "),n.navBar[4]?e("div",[e("ul",[e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/Django/install"}},[e("span",[n._v("install")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/Django/virtualenv"}},[e("span",[n._v("虚拟环境")])])],1)])]):n._e()],1),n._v(" "),e("li",{staticClass:"treeLi"},[e("router-link",{attrs:{to:"/home/js"}},[e("b",{on:{click:function(t){n.jump(5)}}},[e("i",{staticClass:"icon-js"}),e("span",[n._v("js")])])]),n._v(" "),n.navBar[5]?e("div",[e("ul",[e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/js/deepCopy"}},[e("span",[n._v("深度拷贝")])])],1)])]):n._e()],1),n._v(" "),e("li",{staticClass:"treeLi"},[e("router-link",{attrs:{to:"/home/linux"}},[e("b",{on:{click:function(t){n.jump(6)}}},[e("i",{staticClass:"icon-ubuntu icon-rotate"}),e("span",[n._v("linux(Ubuntu)")])])]),n._v(" "),n.navBar[6]?e("div",[e("ul",[e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/linux/tar"}},[e("span",[n._v("压缩")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/linux/map"}},[e("span",[n._v("地图服务器需要的知识")])])],1),n._v(" "),e("li",{staticClass:"branch"},[e("router-link",{attrs:{to:"/home/linux/delete"}},[e("span",[n._v("rm")])])],1)])]):n._e()],1)])]),n._v(" "),e("main",[e("div",{staticClass:"table"}),n._v(" "),e("router-view")],1)])},staticRenderFns:[]};var c=e("Z0/y")(o,l,!1,function(n){e("n6HO")},"data-v-02402627",null).exports,p={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"git"},[t("router-view")],1)},staticRenderFns:[]};var u=e("Z0/y")({name:"git"},p,!1,function(n){e("cJWs")},"data-v-36ae019e",null).exports,h={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("版本回退上一次提交")]),this._v(" "),t("pre",[this._v("      git reset --hard HEAD^\n    ")])])}]};var _=e("Z0/y")({name:"reset"},h,!1,function(n){e("xjeC")},"data-v-f49f5eca",null).exports,v={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("强制推送")]),this._v(" "),t("pre",[this._v("    git push -u origin master -f\n  ")])])}]};var m=e("Z0/y")({name:"force-push",data:function(){return{msg:"this is force-push"}}},v,!1,function(n){e("Y0a4")},"data-v-0a424bdc",null).exports,d={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"python"},[t("router-view")],1)},staticRenderFns:[]};var f=e("Z0/y")({name:"python"},d,!1,function(n){e("odZ8")},"data-v-5be34de8",null).exports,g={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("使用前准备")]),this._v(" "),t("pre",[this._v("  为了让psycopg2兼容python3 下载二进制的psycopg2包\n  pip install -U pip\n  pip install psycopg2\n\n  如果失败的话\n  sudo apt install pip3\n  pip3 install psycopg2\n  pip3 install psycopg2-binary\n        ")]),this._v(" "),t("h3",[this._v("使用psycopg2包 另外还要install psycopg2-binary")]),this._v(" "),t("pre",[this._v("import psycopg2\n\ndef connectPostgreSQL():\n  conn = psycopg2.connect(database=\"postgres\", user=\"postgres\", password=\"postgres\", host=\"127.0.0.1\", port=\"5432\")\n  print( 'connect successful!')\n  cur = conn.cursor()\n  #    cur.execute('''CREATE TABLE COMPANY\n  #           (ID INT PRIMARY KEY     NOT NULL,\n  #           NAME           TEXT    NOT NULL,\n  #           AGE            INT     NOT NULL,\n  #           ADDRESS        CHAR(50),\n  #           SALARY         REAL);''')\n  cur.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\\n        VALUES (5, 'Paul', 32, 'California', 20000.00 )\")\n\n  cur.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\\n        VALUES (6, 'Allen', 25, 'Texas', 15000.00 )\")\n\n  cur.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\\n        VALUES (7, 'Teddy', 23, 'Norway', 20000.00 )\")\n\n  cur.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\\n        VALUES (8, 'Mark', 25, 'Rich-Mond ', 65000.00 )\")\n\n  conn.commit()\n  conn.close()\n\nif __name__=='__main__':\n   connectPostgreSQL()\n        ")])])}]};var y=e("Z0/y")({name:"postgresql",data:function(){return{msg:"postgresql"}}},g,!1,function(n){e("uj47")},"data-v-66448bfe",null).exports,b={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("使用前准备")]),this._v(" "),t("pre",[this._v("  为了让psycopg2兼容python3 下载二进制的psycopg2包\n  pip install -U pip\n  pip install psycopg2\n\n  如果失败的话\n  sudo apt install pip3\n  pip3 install psycopg2\n  pip3 install psycopg2-binary\n        ")]),this._v(" "),t("h3",[this._v("使用psycopg2包 另外还要install psycopg2-binary")]),this._v(" "),t("pre",[this._v("#!/usr/bin/python3\n# -*- coding:utf-8 -*-\nimport psycopg2.extras\n\ndef downloadOne(file_name,start_position,bigfile_size,bigfile_name,url,file_size):\n    print(file_name,start_position,bigfile_size,url,file_size)\n    f = open(file_name, 'wb') # 二进制 读写 覆盖式\n    bigFile = open(bigfile_name,'rb') # 只读\n    bigFile.seek(start_position,0)\n    position = bigFile.tell()\n    img= bigFile.read(file_size)\n    f.write(img)\n    f.close()\n    bigFile.close()\n\ndef download(filename):\n    conn = psycopg2.connect(database=\"filedb\", user=\"postgres\", password=\"postgres\", host=\"10.10.92.233\", port=\"5432\")\n    cursor = conn.cursor(cursor_factory=psycopg2.extras.DictCursor)\n    sql = \"select * from file_info2 WHERE file_name = \\'%s\\'\"%(filename)\n    cursor.execute(sql)\n    answer = cursor.fetchone()\n    if answer == None :\n        print('不存在该数据')\n    elif answer != None :\n        id = answer[0]\n        file_name = answer[1]\n        file_size = answer[2]\n        bigfile_name = answer[3]\n        bigfile_size = answer[4]\n        start_position = answer[5]\n        end_position = answer[6]\n        url = answer[7]\n        root_url = answer[8]\n        try:\n            f = open(bigfile_name, 'r')\n            f.close()\n            downloadOne(file_name,start_position,bigfile_size,bigfile_name,url,file_size)\n        except:\n            print('当前目录缺少%s文件,请确认'%(bigfile_name))\n\n    conn.commit()\n    conn.close()\n\nif __name__ == \"__main__\":\n    download('qt=tile&x=0&y=-2&z=4&styles=pl&scaler=1&udt=20180131.png')\n        ")])])}]};var x=e("Z0/y")({name:"postgresql",data:function(){return{msg:"postgresql"}}},b,!1,function(n){e("nqhA")},"data-v-7c188468",null).exports,C={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("getopt 接受命令行参数")]),this._v(" "),t("pre",[this._v('       try:  #  这里的 h 就表示该选项无参数，m:表示 m 选项后需要有参数\n          opts, args = getopt.getopt(argv, "htcld:s:n:", ["help", "tar", "cat", "ls", "dist=", "src=", "name="])\n       except getopt.GetoptError:\n          print(\'        输入错误，请用 --help 或 -h 查询语法\')\n          sys.exit(2)\n\n       for opt, arg in opts:\n          if opt in ("-h", "--help"):\n          showHelp()\n          sys.exit()\n\n          elif opt in ("-t", "--tar"):\n             src = None\n             name = None\n                for item in opts:\n                   if item[0] in ("-s", "--src"):\n                      src = item[1]\n                   elif item[0] in ("-n", "--name"):\n                      name = item[1]\n\n                   if src == None:\n                      print(\'缺少参数 -s ; --src\')\n                      sys.exit()\n\n                   if name == None:\n                      print(\'缺少参数 -n ; --name\')\n                      sys.exit()\n\n             merge(src, name)\n             print(\'合并成功!\')\n             sys.exit()\n    ')])])}]};var E=e("Z0/y")({name:"python-getopt"},C,!1,function(n){e("pJEu")},"data-v-55e8b88a",null).exports,k={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("脚本demo")]),this._v(" "),t("pre",[this._v("    #!/usr/bin/python3\n    #coding:utf-8\n\n    #\n    #                       _oo0oo_\n    #                      o8888888o\n    #                      88\" . \"88\n    #                      (| -_- |)\n    #                      0\\  =  /0\n    #                    ___/`---'\\___\n    #                  .' \\\\|     |// '.\n    #                 / \\\\|||  :  |||// \\\n    #                / _||||| -:- |||||- \\\n    #               |   | \\\\\\  -  /// |   |\n    #               | \\_|  ''\\---/''  |_/ |\n    #               \\  .-\\__  '-'  ___/-. /\n    #             ___'. .'  /--.--\\  `. .'___\n    #          .\"\" '<  `.___\\_<|>_/___.' >' \"\".\n    #         | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n    #         \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /\n    #     =====`-.____`.___ \\_____/___.-`___.-'=====\n    #                       `=---='\n    #     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    #               佛祖保佑         永无BUG\n\n    import sys\n    import getopt\n    import os\n    import psycopg2.extras\n    import uuid\n\n    def strBoth(string):\n        string = \"'\" + str(string) + \"'\"\n        return string\n\n    def merge(s, n) :\n        src = s\n        name = n\n        nameArray = name.split('/')\n        srcArray = src.split('/')\n        if(nameArray[0]!='.'):\n            nameArray = ['.'] + nameArray\n\n        if (srcArray[-1] == ''):\n            srcArray = srcArray[:-1]\n        src = '/'.join(srcArray)\n        name = '/'.join(nameArray)\n        out = '/'.join(nameArray[:-1])\n        out = out + '/'\n        big = nameArray[-1]\n        try:\n            os.makedirs(src)\n            print('请确认%s目标文件夹是否是你想要压缩的文件夹'%(src))\n            os.rmdir(src)\n            sys.exit(2)\n        except FileExistsError:\n            print('')\n        try:\n            if os.path.isfile(name):\n                print('%s已经存在'%(name))\n                sys.exit(2)\n            else:\n                tar(src, name, big, out)\n        except FileExistsError:\n            print('%s 目录地下有一个%s文件夹 '%(name, big))\n            sys.exit(2)\n\n    def tar (s, n, b, u) :\n        psycopg2.extras.register_uuid()\n        src = s\n        name = n\n        bigfile_name = b\n        conn = psycopg2.connect(database=\"filedb\", user=\"postgres\", password=\"postgres\", host=\"10.10.92.233\",port=\"5432\")\n        cursor = conn.cursor(cursor_factory=psycopg2.extras.DictCursor)\n        id = strBoth(uuid.uuid1())\n        root_url = strBoth(u)\n        sql = 'delete from file_info WHERE bigfile_name = %s' % (strBoth(bigfile_name))\n        cursor.execute(sql)\n        try:\n            os.makedirs(u)\n        except FileExistsError:\n            print('')\n        for fpathe,dirs,fs in os.walk(src):\n            for f in fs:\n                id = strBoth(uuid.uuid1())\n                file_name = strBoth(f)\n                fsize = int(os.path.getsize(os.path.join(fpathe, f)))\n                url = os.path.join(fpathe,f)\n                file = open(os.path.join(fpathe,f),'rb')\n                img = file.read()\n                big_file = open(name,'ab')\n                start_position = int(big_file.tell())\n                big_file.write(img)\n                bigfile_size = int(big_file.tell())\n                big_file.close()\n                file.close()\n                bigfile_name = strBoth(b)\n                url = url[len(src)+1:]\n                url = strBoth(url)\n                sql = 'INSERT INTO file_info (id, file_name, file_size, bigfile_name, bigfile_size, start_position, url, root_url) VALUES (%s, %s, %d, %s, %d, %d, %s, %s);'%(id, file_name, fsize, bigfile_name , bigfile_size, start_position, url, root_url)\n                cursor.execute(sql)\n        conn.commit()\n        conn.close()\n\n\n    def downloadOne(filename, start_position, urlBigFile, DBurl, file_size, output, bFName):\n        outputdir = output.split('/')\n        if outputdir[0]!= '.':\n            output = './' + output\n        if outputdir[-1] != '':\n            output = output + '/'\n        realUrl = output + filename\n        if os.path.isfile(realUrl):\n            print('%s已经存在' % (realUrl))\n            sys.exit(2)\n        try:\n            realUrlArray = realUrl.split('/')\n            makeurl = '/'.join(realUrlArray[:-1]) + '/'\n            os.makedirs(makeurl)\n        except FileExistsError:\n            print('已经存在不用创建')\n        f = open(output + filename, 'wb') # 二进制 读写 覆盖式\n        bigFile = open(urlBigFile,'rb') # 只读\n        bigFile.seek(start_position,0)\n        img = bigFile.read(file_size)\n        f.write(img)\n        f.close()\n        bigFile.close()\n        cmds = 'eog %s%s'%(output,strBoth(filename))\n        os.popen(cmds)\n        print('创建成功！')\n\n    def download(filename, outputDir,bigFileName):\n        fileN = filename\n        output = outputDir\n        urlBigFile = bigFileName\n        urlBigFileArray = urlBigFile.split(\"/\")\n        bFName = urlBigFileArray[-1]\n        conn = psycopg2.connect(database=\"filedb\", user=\"postgres\", password=\"postgres\", host=\"10.10.92.233\", port=\"5432\")\n        cursor = conn.cursor(cursor_factory=psycopg2.extras.DictCursor)\n        sql = \"select * from file_info WHERE url = \\'%s\\' AND bigfile_name = \\'%s\\';\"%(filename,bFName)\n        cursor.execute(sql)\n        answer = cursor.fetchone()\n        if answer == None :\n            print('不存在该大文件的数据')\n        elif answer != None :\n            print(answer)\n            file_size = answer[2]\n            start_position = answer[5]\n            DBurl = answer[7]\n            print('urlBigFile=', urlBigFile)\n            test = os.path.isfile(urlBigFile)\n            if test == False:\n                print('请确认该路径底下的大文件%s ' % (urlBigFile))\n                sys.exit()\n            downloadOne(fileN, start_position, urlBigFile, DBurl, file_size, output, bFName)\n        conn.commit()\n        conn.close()\n\n    def lsDir (bName):\n        bArray = bName.split('/')\n        bigName = bArray[-1]\n        conn = psycopg2.connect(database=\"filedb\", user=\"postgres\", password=\"postgres\", host=\"10.10.92.233\", port=\"5432\")\n        cursor = conn.cursor(cursor_factory=psycopg2.extras.DictCursor)\n        sql = 'select url,file_size,start_position from file_info WHERE bigfile_name = \\'%s\\'' % (bigName)\n        cursor.execute(sql)\n        rows = cursor.fetchall()\n        print(rows)\n        conn.commit()\n        conn.close()\n        if rows == [] :\n            print('搜索结果为空,请确认数据库中是否存在该大文件的存储内容')\n        for item in rows:\n            print(\"fileSize= '%s', startPosition= '%s', fileName= '%s'\" % ( item[1], item[2], item[0]))\n\n    def consoleLog():\n        print(\n            '''\n\n        请注意，该脚本基于  psycopg2 ,请检查python环境中是否存在 psycopg2 和 psycopg2-binary 两个包 请运行‘pip install -U pip ; pip install psycopg2’ 以安装二进制psycopg2的包,如果无法用./执行，请使用 python fileMergeSline.py 《命令》 来执行\n        帮助:     必填项《 》  选填项 [ ]\n        功能：\n        -h --help             [打开帮助文档]\n        -t --tar              《合并指令》\n        -c --cat              《提取单个文件,并用eog打开》\n        -l --ls               《展示postgresql中所有的fileName》\n\n        参数:\n        -d --dist             [解压的目标文件夹]\n        -s --src              《目标路径》\n        -n --name             -t 《带或不带路径的大文件名》\n                          -c  《文件名》\n        -b --bigFile          《不带路径的大文件名》\n\n        example:\n\n        合并文件\n\n        [sudo] [python3] ./fileMergeSline.py -t 《-s '文件夹路径'》 《-n '带或不带路径的大文件名称'》\n\n        查看文件\n\n        [sudo] [python3] ./fileMergeSline.py -l 《-b '不带路径的大文件名'》\n\n\n        提取单个并用eog查看\n\n        [sudo] [python3] ./fileMergeSline.py -c 《-n 文件名》 [-d '输出文件夹'] 《-b '不带路径的大文件名'》\n\n            '''\n        )\n    def main(argv):\n        try:  #  这里的 h 就表示该选项无参数，m:表示 m 选项后需要有参数\n            opts, args = getopt.getopt(argv, \"htcld:s:n:b:\", [\"help\", \"tar\", \"cat\", \"ls\", \"dist=\", \"src=\", \"name=\", \"bigFile=\"])\n        except getopt.GetoptError:\n            print('        输入错误，请用 --help 或 -h 查询语法')\n            sys.exit(2)\n\n        for opt, arg in opts:\n            if opt in (\"-h\", \"--help\"):\n                consoleLog()\n                sys.exit()\n            elif opt in (\"-t\", \"--tar\"):\n                src = None\n                name = None\n                for item in opts:\n                    if item[0] in (\"-s\", \"--src\"):\n                        src = item[1]\n                    elif item[0] in (\"-n\", \"--name\"):\n                        name = item[1]\n\n                if src == None:\n                    print('缺少参数 -s ; --src')\n                    sys.exit()\n\n                if name == None:\n                    print('缺少参数 -n ; --name')\n                    sys.exit()\n                merge(src, name)\n                print('合并成功!')\n                sys.exit()\n            elif opt in (\"-c\", \"--cat\"):\n                outputDirectory = None\n                fileName = None\n                bigFileName = None\n                for item in opts:\n                    if item[0] in (\"-d\", \"--dist\"):\n                        outputDirectory = item[1]\n                    elif item[0] in (\"-n\", \"--name\"):\n                        fileName = item[1]\n                        print('fileName=', fileName)\n                    elif item[0] in (\"-b\", \"--bigFile\"):\n                        bigFileName = item[1]\n\n                if outputDirectory == None:\n                    outputDirectory = './'\n\n                if fileName == None:\n                    print('缺少参数 -n')\n                    sys.exit()\n                if bigFileName == None:\n                    print('缺少参数 -b')\n                    sys.exit()\n                print('outputDirectory=',outputDirectory,'fileName=',fileName,'bigFileName=',bigFileName)\n                download(fileName, outputDirectory, bigFileName)\n            elif opt in (\"-l\", \"--ls\"):\n                bigFileName = None\n                for item in opts:\n                    if item[0] in (\"-b\", \"--bigFile\"):\n                        bigFileName = item[1]\n                if bigFileName == None:\n                    print('缺少参数 -b')\n                    sys.exit()\n                lsDir(bigFileName)\n\n    if __name__ == \"__main__\":\n        main(sys.argv[1:])\n  ")])])}]};var w=e("Z0/y")({name:"pythonScript"},k,!1,function(n){e("HVCB")},"data-v-31e0f00a",null).exports,j={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"python-base page"},[e("ul",[e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/pythonType"}},[n._v("python类型")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/variable"}},[n._v("变量")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/Format"}},[n._v("字符串格式化")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/conversion"}},[n._v("转换")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/loop"}},[n._v("循环")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/string"}},[n._v("字符串")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/list"}},[n._v("list列表(web 数组)")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/tuple"}},[n._v("tuple元祖(不可改数组)")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/dictionary"}},[n._v("dict字典(web对象)")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/ergodic"}},[n._v("遍历元素")])],1),n._v(" "),e("li",[e("router-link",{attrs:{to:"/home/python/pythonBase/operator"}},[n._v("运算符和id")])],1)]),n._v(" "),e("router-view")],1)},staticRenderFns:[]};var $=e("Z0/y")({name:"python-base",data:function(){return{msg:"python-base"}}},j,!1,function(n){e("DvDx")},"data-v-e2ec9b6e",null).exports,N={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("h3",[this._v("数据类型")]),this._v(" "),t("pre",[this._v("    1. Numbers(数字)          - int(有符号的整型)\n                              - long(长整形[也可以代表八进制和十六进制])\n                              - float(浮点型)\n                              - complex(复数)\n\n    2.布尔类型(区分大小写)    - True\n                              - False\n\n    3.String(字符串)          'hello'   \"world\"\n\n    4.List(列表)              []\n\n    5.Tuple(元祖)             ()\n\n    6.Dictionary(字典)        {}\n  ")])])}]};var F=e("Z0/y")({name:"python-type",data:function(){return{msg:"this is python-type"}}},N,!1,function(n){e("fqLT")},"data-v-b177b9e8",null).exports,R={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"python-variable"},[e("h3",[n._v("变量")]),n._v(" "),e("pre",[n._v("      弱类型 和前端js一致\n\n      不可使用关键字生命变量！！！\n      import keyword\n      print(keyword.kwlist)\n\n      变量名由字母、下划线和数字组成，且数字不能开头\n    ")]),n._v(" "),e("h3",[n._v("全局变量")]),n._v(" "),e("pre",[n._v("      a = 100\n\n      def test1():\n          print(a)\n\n      >>> 100\n    ")]),n._v(" "),e("h3",[n._v("局部变量")]),n._v(" "),e("pre",[n._v("      a = 100 # 全局变量\n\n      def test1():\n          a = 200 # 局部变量\n          print(a)\n\n      >>> 200\n    ")])])}]};var D=e("Z0/y")({name:"python-variable",data:function(){return{msg:"python-variable"}}},R,!1,function(n){e("vIWL")},"data-v-254dc5df",null).exports,A={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("h3",[n._v("格式化字符串")]),n._v(" "),e("pre",[n._v('    "我的姓名是%s,年龄是%d"%(name,age)\n  ')]),n._v(" "),e("table",[e("tr",[e("td",[n._v("格式符号")]),n._v(" "),e("td",[n._v("转换")])]),n._v(" "),e("tr",[e("td",[n._v("%c")]),n._v(" "),e("td",[n._v("字符")])]),n._v(" "),e("tr",[e("td",[n._v("%s")]),n._v(" "),e("td",[n._v("通过str() 字符串转换来格式化")])]),n._v(" "),e("tr",[e("td",[n._v("%i")]),n._v(" "),e("td",[n._v("有符号十进制整数")])]),n._v(" "),e("tr",[e("td",[n._v("%d")]),n._v(" "),e("td",[n._v("有符号十进制整数")])]),n._v(" "),e("tr",[e("td",[n._v("%u")]),n._v(" "),e("td",[n._v("无符号十进制整数")])]),n._v(" "),e("tr",[e("td",[n._v("%o")]),n._v(" "),e("td",[n._v("八进制整数")])]),n._v(" "),e("tr",[e("td",[n._v("%x")]),n._v(" "),e("td",[n._v("十六进制整数（小写字母）")])]),n._v(" "),e("tr",[e("td",[n._v("%X")]),n._v(" "),e("td",[n._v("十六进制整数（大写字母）")])]),n._v(" "),e("tr",[e("td",[n._v("%e")]),n._v(" "),e("td",[n._v("索引符号（小写'e'）")])]),n._v(" "),e("tr",[e("td",[n._v("%E")]),n._v(" "),e("td",[n._v("索引符号（大写“E”）")])]),n._v(" "),e("tr",[e("td",[n._v("%f")]),n._v(" "),e("td",[n._v("浮点实数")])]),n._v(" "),e("tr",[e("td",[n._v("%g")]),n._v(" "),e("td",[n._v("％f和％e 的简写")])]),n._v(" "),e("tr",[e("td",[n._v("%G")]),n._v(" "),e("td",[n._v("％f和％E的简写")])])])])}]};var B=e("Z0/y")({name:"python-format"},A,!1,function(n){e("AeqZ")},"data-v-64296866",null).exports,z={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"conversion"},[t("h3",[this._v("转换")]),this._v(" "),t("pre",[this._v("      函数                          说明\n      int(x [,base ])         将x转换为一个整数\n      long(x [,base ])        将x转换为一个长整数\n      float(x )               将x转换到一个浮点数\n      complex(real [,imag ])  创建一个复数\n      str(x )                 将对象 x 转换为字符串\n      repr(x )                将对象 x 转换为表达式字符串\n      eval(str )              用来计算在字符串中的有效Python表达式,并返回一个对象\n      tuple(s )               将序列 s 转换为一个元组\n      list(s )                将序列 s 转换为一个列表\n      chr(x )                 将一个整数转换为一个字符\n      unichr(x )              将一个整数转换为Unicode字符\n      ord(x )                 将一个字符转换为它的整数值\n      hex(x )                 将一个整数转换为一个十六进制字符串\n      oct(x )                 将一个整数转换为一个八进制字符串\n    ")])])}]};var T=e("Z0/y")({name:"python-conversion",data:function(){return{msg:"conversion"}}},z,!1,function(n){e("jHOY")},"data-v-1c3c0c82",null).exports,L={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"python-loop"},[e("h3",[n._v("for")]),n._v(" "),e("pre",[n._v("      name = 'dongGe'\n\n      for x in name:\n        print(x)\n\n      d\n      o\n      n\n      g\n      G\n      e\n    ")]),n._v(" "),e("h3",[n._v("enumerate")]),n._v(" "),e("pre",[n._v("      arr = [1,2,3,4]\n      for i in enumerate(arr):   #for index,i in enumerate(arr):\n        print(i)\n\n      (0, 1)\n      (1, 2)\n      (2, 3)\n      (3, 4)\n    ")]),n._v(" "),e("h3",[n._v("while")]),n._v(" "),e("pre",[n._v("      i = 0\n      while 5>i :\n        print(i)\n        i+=1\n      0\n      1\n      2\n      3\n      4\n    ")]),n._v(" "),e("h3",[n._v("break   continue")]),n._v(" "),e("pre",[n._v("      break的作用：用来结束整个循环\n      continue的作用：用来结束本次循环，紧接着执行下一次的循环\n      break/continue只能用在循环中，除此以外不能单独使用\n      break/continue在嵌套循环中，只对最近的一层循环起作用\n    ")])])}]};var Z=e("Z0/y")({name:"python-loop",data:function(){return{msg:"python-loop"}}},L,!1,function(n){e("l/o7")},"data-v-072be5af",null).exports,S={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("h3",[n._v("字符串")]),n._v(" "),e("h3",[n._v("输入 输出")]),n._v(" "),e("pre",[n._v("    userName = input('请输入用户名:')\n    print('hello world')\n  ")]),n._v(" "),e("h3",[n._v("字符串下标")]),n._v(" "),e("pre",[n._v("    'world'\n    0,1,2,3,4\n    -5,-4,-3,-2,-1\n  ")]),n._v(" "),e("h3",[n._v("字符串切片")]),n._v(" "),e("pre",[n._v('    切片的语法：[起始:结束:步长]\n    注意：选取的区间属于左闭右开型，即从"起始"位开始，到"结束"位的前一位结束（不包含结束位本身)。\n\n    name = \'abcdef\'\n    print(name[1:-1])\n    >>> bcde\n    总结： 含头不含尾\n  ')])])}]};var P=e("Z0/y")({name:"python-string",data:function(){return{msg:"this is python-string"}}},S,!1,function(n){e("r/3s")},"data-v-09b008ae",null).exports,I={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("h3",[n._v("List 列表")]),n._v(" "),e("h3",[n._v("查")]),n._v(" "),e("pre",[n._v("    namesList = ['xiaoWang','xiaoZhang','xiaoHua']\n    print(namesList[2])  等同于  print(nameList[-1])\n    >>> 'xiaoHua'\n\n    index, count\n    index和count与字符串中的用法相同\n\n    >>> a = ['a', 'b', 'c', 'a', 'b']\n    >>> a.index('a', 1, 3) # 注意是左闭右开区间\n    Traceback (most recent call last):\n      File \"< stdin >\", line 1, in < module >\n    ValueError: 'a' is not in list\n    >>> a.index('a', 1, 4)\n    3\n    >>> a.count('b')\n    2\n    >>> a.count('d')\n    0\n\n    in（存在）,如果存在那么结果为true，否则为false\n    not in（不存在），如果不存在那么结果为true，否则false\n\n    #待查找的列表\n    nameList = ['xiaoWang','xiaoZhang','xiaoHua']\n\n    #获取用户要查找的名字\n    findName = input('请输入要查找的姓名:')\n\n    #查找是否存在\n    if findName in nameList:\n      print('在字典中找到了相同的名字')\n    else:\n      print('没有找到')\n\n  ")]),n._v(" "),e("h3",[n._v("循环列表")]),n._v(" "),e("pre",[n._v("    demo:\n        namesList = ['xiaoWang','xiaoZhang','xiaoHua']\n        length = len(namesList)\n        i = 0\n        while length < i:\n            print(namesList[i])\n            i+=1\n    结果:\n        xiaoWang\n        xiaoZhang\n        xiaoHua\n  ")]),n._v(" "),e("h3",[n._v("增")]),n._v(" "),e("pre",[n._v("    append\n      通过append可以向列表添加元素\n      >>> a = [1, 2]\n      >>> b = [3, 4]\n      >>> a.append(b)\n      >>> a\n      [1, 2, [3, 4]]\n    extend\n      通过extend可以将另一个集合中的元素逐一添加到列表中\n      >>> a.extend(b)\n      >>> a\n      [1, 2, [3, 4], 3, 4]\n    insert\n       insert(index, object) 在指定位置index前插入元素object\n       >>> a = [0, 1, 2]\n       >>> a.insert(1, 3)\n       >>> a\n       [0, 3, 1, 2]\n\n\n  ")]),n._v(" "),e("h3",[n._v("改")]),n._v(" "),e("pre",[n._v("    A = ['xiaoWang','xiaoZhang','xiaoHua']\n    A[1] = 'hello'\n    print(A)\n    >>>['xiaoWang','hello','xiaoHua']\n  ")]),n._v(" "),e("h3",[n._v("删")]),n._v(" "),e("pre",[n._v("    列表元素的常用删除方法有：\n      del：根据下标进行删除\n      pop：删除最后一个元素\n      remove：根据元素的值进行删除\n        movieName = ['加勒比海盗','骇客帝国','第一滴血','指环王','霍比特人','速度与激情']\n        del movieName[2]\n        movieName = ['加勒比海盗','骇客帝国','指环王','霍比特人','速度与激情']\n        movieName.pop()\n        movieName = ['加勒比海盗','骇客帝国','指环王','霍比特人']\n        movieName.remove('指环王')\n        movieName = ['加勒比海盗','骇客帝国','霍比特人']\n  ")]),n._v(" "),e("h3",[n._v("排序 翻转")]),n._v(" "),e("pre",[n._v("    sort方法是将list按特定顺序重新排列，默认为由小到大，参数reverse=True可改为倒序，由大到小。\n    reverse方法是将list逆置。\n    >>> a = [1, 4, 2, 3]\n    >>> a\n    [1, 4, 2, 3]\n    >>> a.reverse()\n    >>> a\n    [3, 2, 4, 1]\n    >>> a.sort()\n    >>> a\n    [1, 2, 3, 4]\n    >>> a.sort(reverse=True)\n    >>> a\n    [4, 3, 2, 1]\n  ")])])}]};var H=e("Z0/y")({name:"python-list",data:function(){return{msg:"this is python-list"}}},I,!1,function(n){e("G7E6")},"data-v-691d0d34",null).exports,O={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("h3",[this._v("元组")]),this._v(" "),t("pre",[this._v("    不可改的，类似list的一个东西\n    tup = (1,2,3,4)\n    print(tup[2])\n    print(tup.count(1))\n  ")])])}]};var U=e("Z0/y")({name:"tuple",data:function(){return{msg:"this is tuple"}}},O,!1,function(n){e("PMlw")},"data-v-39d47831",null).exports,q={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("h3",[this._v("字典dict")]),this._v(" "),t("pre",[this._v("    info = {'name':'班长', 'id':100, 'sex':'f', 'address':'地球亚洲中国北京'}\n\n    查\n\n    name = info.get('name')\n\n    改\n\n    info['id'] = 99\n\n    增\n\n    info['age'] = 88\n\n    删除\n\n    del info['name']  # 删除子元素\n    del info          # None\n    info.clear()      # {}\n\n    长度 len()\n    info = {'name':'班长', 'id':100, 'sex':'f', 'address':'地球亚洲中国北京'}\n    len(info)\n    >>> 4\n\n    键名 dict.keys()\n    info.keys()\n    >>> ['name','id','sex','address']\n\n    键值 dict.values()\n    info.values()\n    >>> ['班长','100','f','地球亚洲中国北京']\n\n    dict.items()\n    info.items()\n    >>> [('name':'班长'), ('id':100), ('sex':'f'), ('address':'地球亚洲中国北京')]\n\n    has_key\n    info.has_key('name')\n    True\n    info.has_key('error')\n    False\n  ")])])}]};var M=e("Z0/y")({name:"python-dictionary",data:function(){return{msg:"this is python-dictionary"}}},q,!1,function(n){e("NaI6")},"data-v-7b127813",null).exports,V={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("h3",[n._v("遍历字符串")]),n._v(" "),e("pre",[n._v("    >>> a_str = \"hello itcast\"\n    >>> for char in a_str:\n    ...     print(char,end=' ')\n    ...\n    h e l l o   i t c a s t\n  ")]),n._v(" "),e("h3",[n._v("遍历list列表")]),n._v(" "),e("pre",[n._v("    >>> a_list = [1, 2, 3, 4, 5]\n    >>> for num in a_list:\n    ...     print(num,end=' ')\n    ...\n    1 2 3 4 5\n  ")]),n._v(" "),e("h3",[n._v("元祖tuple遍历")]),n._v(" "),e("pre",[n._v('    >>> a_turple = (1, 2, 3, 4, 5)\n    >>> for num in a_turple:\n    ...     print(num,end=" ")\n    1 2 3 4 5\n  ')]),n._v(" "),e("h3",[n._v("遍历对象dict")]),n._v(" "),e("pre",[n._v('    dict = {"0":2,"1":2}\n    keys\n\n    for key in dict.keys()\n      print(key)\n    value\n\n    for value in dict.values()\n      print(value)\n\n    item\n\n    for item in dict.items()\n      print(item)\n    >>>\n    (0,2)\n    (1,2)\n\n    key,value\n\n    for key,value in dict.items()\n      print(key,value)\n\n  ')]),n._v(" "),e("h3",[n._v("enumerate()")]),n._v(" "),e("pre",[n._v("    >>> chars = ['a', 'b', 'c', 'd']\n    >>> for i, chr in enumerate(chars):\n    ...     print i, chr\n    ...\n    0 a\n    1 b\n    2 c\n    3 d\n  ")])])}]};var G=e("Z0/y")({name:"python-ergodic",data:function(){return{msg:"this is python-ergodic"}}},V,!1,function(n){e("DsLj")},"data-v-5741b282",null).exports,Y={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("h3",[this._v("运算符")]),this._v(" "),t("pre",[this._v("    运算符       Python 表达式            结果                    描述                  支持的数据类型\n      +         [1, 2] + [3, 4]       [1, 2, 3, 4]                合并               字符串、列表、元组\n      *         'Hi!' * 4        ['Hi!', 'Hi!', 'Hi!', 'Hi!']     复制               字符串、列表、元组\n      in         3 in (1, 2, 3)           True                元素是否存在        字符串、列表、元组、字典\n    not in      4 not in (1, 2, 3)        True                元素是否不存在      字符串、列表、元组、字典\n  ")]),this._v(" "),t("h3",[this._v("id地址")]),this._v(" "),t("pre",[this._v("    >>> a = 1\n    >>> b = a\n    >>> id(a)\n    13033816\n    >>> id(b)   # 注意两个变量的id值相同\n    13033816\n    >>> a = 2\n    >>> id(a)   # 注意a的id值已经变了\n    13033792\n    >>> id(b)   # b的id值依旧\n    13033816\n  ")])])}]};var W=e("Z0/y")({name:"pythonOperator"},Y,!1,function(n){e("MeSo")},"data-v-cbc7326a",null).exports,X={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"python-Core page"},[t("ul",[t("li",[t("router-link",{attrs:{to:"/home/python/pythonCore/function"}},[this._v("函数")])],1),this._v(" "),t("li",[t("router-link",{attrs:{to:"/home/python/pythonCore/recursion"}},[this._v("递归函数")])],1),this._v(" "),t("li",[t("router-link",{attrs:{to:"/home/python/pythonCore/file"}},[this._v("文件操作")])],1)]),this._v(" "),t("router-view")],1)},staticRenderFns:[]};var J=e("Z0/y")({name:"python-base",data:function(){return{msg:"python-base"}}},X,!1,function(n){e("FJBi")},"data-v-e2e10668",null).exports,K={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("h3",[n._v("函数的定义")]),n._v(" "),e("pre",[n._v('    def 函数名():\n      代码\n\n    def test():\n      print("hello world")\n  ')]),n._v(" "),e("h3",[n._v("调用")]),n._v(" "),e("pre",[n._v('    函数名()\n\n    test()\n    >>>"hello world"\n  ')]),n._v(" "),e("h3",[n._v("查看函数")]),n._v(" "),e("pre",[n._v("    help(函数名)\n  ")]),n._v(" "),e("h3",[n._v("带参函数")]),n._v(" "),e("pre",[n._v("    def add2num(a, b):\n      c = a+b\n      print c\n  ")]),n._v(" "),e("h3",[n._v("调用带参数的函数")]),n._v(" "),e("pre",[n._v("    add2num(2,3)\n    >>> 5\n  ")]),n._v(" "),e("h3",[n._v("返回值")]),n._v(" "),e("pre",[n._v("    def add2num(a, b):\n      c = a+b\n      return c\n  ")]),n._v(" "),e("h3",[n._v("获取返回值")]),n._v(" "),e("pre",[n._v("    sum = add2num(2, 3)\n    print(sum)\n    >>> 5\n  ")]),n._v(" "),e("h3",[n._v("返回多个值(本质是利用了元祖)")]),n._v(" "),e("pre",[n._v("    >>> def divid(a, b):\n      ...     shang = a//b\n      ...     yushu = a%b\n      ...     return shang, yushu\n      ...\n      >>> sh, yu = divid(5, 2)\n      >>> sh\n      5\n      >>> yu\n      1\n  ")]),n._v(" "),e("h3",[n._v("默认值设定( 注意：带有默认值的参数一定要位于参数列表的最后面 )")]),n._v(" "),e("pre",[n._v('    def printinfo( name, age = 35 ):\n     # 打印任何传入的字符串\n     print "Name: ", name\n\n    # 调用printinfo函数\n    printinfo(name="miki" )\n    printinfo( age=9,name="miki" )\n    以上实例输出结果：\n\n    Name:  miki\n    Age  35\n    Name:  miki\n    Age  9\n  ')])])}]};var Q=e("Z0/y")({name:"python-function",data:function(){return{msg:"this is python-function"}}},K,!1,function(n){e("zmd+")},"data-v-09444a93",null).exports,nn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("h3",[this._v("递归函数")]),this._v(" "),t("pre",[this._v("    通过前面的学习知道一个函数可以调用其他函数。\n\n    如果一个函数在内部不调用其它的函数，而是自己本身的话，这个函数就是递归函数。\n  ")]),this._v(" "),t("h3",[this._v("使用场景")]),this._v(" "),t("pre",[this._v("    1! = 1\n    2! = 2 × 1 = 2 × 1!\n    3! = 3 × 2 × 1 = 3 × 2!\n    4! = 4 × 3 × 2 × 1 = 4 × 3!\n    ...\n    n! = n × (n-1)!\n\n    def factorial(num):\n      if num > 1:\n        result = num * factorial(num - 1)\n      else:\n        result = 1\n      return result\n  ")])])}]};var tn=e("Z0/y")({name:"python-recursion",data:function(){return{msg:"this is python-recursion"}}},nn,!1,function(n){e("Nzen")},"data-v-73577108",null).exports,en={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"page"},[e("h3",[n._v("文件操作")]),n._v(" "),e("h3",[n._v("打开文件")]),n._v(" "),e("pre",[n._v("    f = open('test.txt', 'w')\n\n    r     以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。\n    w     打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。\n    a     打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。\n    rb    以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。\n    wb    以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。\n    ab    以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。\n    r+    打开一个文件用于读写。文件指针将会放在文件的开头。\n    w+    打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。\n    a+    打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。\n    rb+   以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。\n    wb+   以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。\n    ab+   以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。\n  ")]),n._v(" "),e("h3",[n._v("文件关闭")]),n._v(" "),e("pre",[n._v("    f.close()\n  ")]),n._v(" "),e("h3",[n._v("文件写入")]),n._v(" "),e("pre",[n._v("    f = open('test.txt', 'w')\n    f.write('hello world, i am here!')\n    f.close()\n  ")]),n._v(" "),e("h3",[n._v("文件读取")]),n._v(" "),e("pre",[n._v("    f = open('test.txt', 'r')\n    content = f.read(5) # 读5个字\n    content = f.read() # 读完\n    print(content)\n  ")]),n._v(" "),e("h3",[n._v("文件读取和写入demo")]),n._v(" "),e("pre",[n._v("    f1 = open('test.txt', 'r')\n    content = f.read() # 读完\n\n    f2 = open('test1.txt', 'w')\n    f2.write(content)\n    f1.close()\n    f2.close()\n  ")])])}]};var rn=e("Z0/y")({name:"file",data:function(){return{msg:"this is file"}}},en,!1,function(n){e("9Pdm")},"data-v-5785ad75",null).exports,sn={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"ngnix"},[t("router-view")],1)},staticRenderFns:[]};var an=e("Z0/y")({name:"nginx"},sn,!1,function(n){e("9TCY")},"data-v-63d1a198",null).exports,on={render:function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"page"},[this._v("\n    "+this._s(this.msg)+"\n")])},staticRenderFns:[]};var ln=e("Z0/y")({name:"wechat_http",data:function(){return{msg:"http"}}},on,!1,function(n){e("4son")},"data-v-5b322c72",null).exports,cn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("本地https服务器")]),this._v(" "),t("pre",[this._v("    #user  nobody;\n    worker_processes  1;\n    #error_log  logs/error.log;\n    #error_log  logs/error.log  notice;\n    #error_log  logs/error.log  info;\n    #pid        logs/nginx.pid;\n    events {\n        worker_connections  1024;\n    }\n    http {  # 本地http服务，用于转发https\n        include       mime.types;\n        default_type  application/octet-stream;\n        #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n        #                  '$status $body_bytes_sent \"$http_referer\" '\n        #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n        #access_log  logs/access.log  main;\n        sendfile        on;\n        #tcp_nopush     on;\n        #keepalive_timeout  0;\n        keepalive_timeout  65;\n        #gzip  on;\n        upstream LstController {\n            # server 10.10.92.233:8080;\n            # server 10.10.97.156:8080;\n            # server 10.10.92.237:8080;\n            # 开发服务器\n            # server 10.10.92.200:8080;\n            # 翁连俊\n            # server 10.10.92.233:8080;\n            # 范胜\n            # server 10.10.92.237:8080;\n            # 开发服务器\n            # server 10.10.97.202:8080;\n             server 10.10.92.200:8080;\n        }\n        client_max_body_size 40m;\n        map $http_upgrade $connection_upgrade {\n            default     upgrade;\n            ''          close;\n        }\n        server {\n            listen       80;\n            server_name  localhost;\n            #charset koi8-r;\n            #access_log  logs/host.access.log  main;\n            #location / {\n            #    root   html;\n            #    index  index.html index.htm;\n            #}\n            location / {   # vue配置\n                root D:/facegate-ui/facegateCompiled;\n                index index.html;\n            }\n            location ^~ /static/ {       # vue资源文件夹配置\n                root D:/facegate-ui/facegateCompiled/;\n                index index.html;\n            }\n            #error_page  404              /404.html;\n            # redirect server error pages to the static page /50x.html\n            #\n            error_page   500 502 503 504  /50x.html;\n            location = /50x.html {\n                root   html;\n            }\n            location ^~ /lstweb/ {      # angularjs配置\n                root D:/;\n                index login.html;\n            }\n            location ^~ /store/ {       # angularjs图片配置\n                rewrite ^/store/(.*) http://10.10.92.200/store/$1 permanent;\n            }\n            location /controller {      # angularjs/vue 的接口指向配置\n                proxy_http_version 1.1;\n                #   proxy_pass_request_headers on;\n                #   proxy_set_header Host $host;\n                add_header backendIP $upstream_addr;\n                add_header backendCode $upstream_status;\n                proxy_pass http://LstController;\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection $connection_upgrade;\n                proxy_read_timeout 86400s;\n            }\n            location ^~ /demo/ {\n                root D:/;\n                index index.html;\n            }\n            # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n            #\n            #location ~ \\.php$ {\n            #    proxy_pass   http://127.0.0.1;\n            #}\n            # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n            #\n            #location ~ \\.php$ {\n            #    root           html;\n            #    fastcgi_pass   127.0.0.1:9000;\n            #    fastcgi_index  index.php;\n            #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n            #    include        fastcgi_params;\n            #}\n            # deny access to .htaccess files, if Apache's document root\n            # concurs with nginx's one\n            #\n            #location ~ /\\.ht {\n            #    deny  all;\n            #}\n        }\n        # another virtual host using mix of IP-, name-, and port-based configuration\n        #\n        #server {\n        #    listen       8000;\n        #    listen       somename:8080;\n        #    server_name  somename  alias  another.alias;\n        #    location / {\n        #        root   html;\n        #        index  index.html index.htm;\n        #    }\n        #}\n        # HTTPS server\n        server {\n            listen       443 ssl;\n            server_name  localhost;                                                        #################\n            ssl_certificate      C://nginx-1.12.2//ssl//alipay.crt;                        # 利用openssl生成证书\n            ssl_certificate_key  C://nginx-1.12.2//ssl//alipay.key;                        #################\n            #ssl_session_cache    shared:SSL:1m;                                           #################\n            #ssl_session_timeout  5m;                                                      # 普通的https用该种配置就好了\n            #ssl_ciphers  HIGH:!aNULL:!MD5;                                                #\n            #ssl_prefer_server_ciphers  on;                                                #################\n            server_name_in_redirect off;                                                   ##########################\n            proxy_set_header Host $host:$server_port;                                      #\n            proxy_set_header X-Real-IP $remote_addr;                                       #  微信小程序需要这种配置\n            proxy_set_header REMOTE-HOST $remote_addr;                                     ##########################\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            location / {\n                root D:/alipay/;\n                index index.html;\n            }\n            #location / {\n            #    proxy_pass http://127.0.0.1/gatesystem/;\n            #        root   html;\n                #      index  index.html index.htm;\n            #}\n            location /controller {      # angularjs/vue 的接口指向配置\n                proxy_http_version 1.1;\n                #   proxy_pass_request_headers on;\n                #   proxy_set_header Host $host;\n                add_header backendIP $upstream_addr;\n                add_header backendCode $upstream_status;\n                proxy_pass http://LstController;                                           # 指向\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection $connection_upgrade;\n                proxy_read_timeout 86400s;\n            }\n        }\n    }\n\n  ")]),this._v(" "),t("img",{attrs:{src:e("jRFS"),alt:""}})])}]};var pn=e("Z0/y")({name:"wechat_https",data:function(){return{msg:"wechat_https"}}},cn,!1,function(n){e("1VoX")},"data-v-d632d51e",null).exports,un={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"vue"},[t("router-view")],1)},staticRenderFns:[]};var hn=e("Z0/y")({name:"vue-docs"},un,!1,function(n){e("sn1t")},"data-v-5d6b1913",null).exports,_n={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"page"},[e("h3",[n._v("1.安装node")]),n._v(" "),n._m(0),n._v(" "),e("h3",[n._v("2.安装脚手架")]),n._v(" "),e("p",[n._v("npm install -g vue-cli")]),n._v(" "),e("h3",[n._v("3.查看vue版本")]),n._v(" "),e("p",[n._v("vue -V")]),n._v(" "),e("h3",[n._v("4.构建项目")]),n._v(" "),n._m(1),n._v(" "),e("h3",[n._v("5.试着运行")]),n._v(" "),e("p",[n._v("npm run dev")]),n._v(" "),e("div",{staticClass:"bottomBar"},[e("router-link",{staticClass:"center",attrs:{to:"/home/vue/package"}},[e("span",[n._v("npm包")]),n._v(" "),e("span",{staticClass:"fa fa-angle-double-right"})])],1)])},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("p",[this._v("可以直接到中文官网 "),t("a",{attrs:{href:"http://nodejs.cn/"}},[this._v("http://nodejs.cn/")]),this._v("下载安装包")])},function(){var n=this.$createElement,t=this._self._c||n;return t("p",[this._v("\n    首先需要在命令行中进入到项目目录，然后输入:\n    "),t("br"),this._v("\n    vue init <模板名> <项目名>\n    "),t("br"),t("br"),this._v("\n       例如：vue init webpack Vue-Project\n    "),t("br"),t("br"),this._v("\n    然后进入项目目录（cd Vue-Project）,使用 npm 安装依赖\n    "),t("br"),this._v("\n    npm install\n    "),t("br")])}]};var vn=e("Z0/y")({name:"vue-init",data:function(){return{msg:"this is vue-init"}}},_n,!1,function(n){e("x0Hd")},"data-v-46f325b0",null).exports,mn={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"page"},[e("h3",[n._v("在项目文件夹里面运行以下命令")]),n._v(" "),e("pre",[n._v("     npm i element-ui -D -d\n     npm i axios -D -d\n     npm i echarts -D -d\n     npm i vuex -D -d\n     npm i js-base64 -D -d\n     npm i less less-loader -D -d\n     npm i font-awesome -D -d\n  ")]),n._v(" "),e("h3",[n._v("解释")]),n._v(" "),e("pre",[n._v("    i => install\n    -D => --save-dev\n    -S => --save (不推荐,因为项目移动后，重新安装包不在dev上面的话，会编译错误)\n  ")]),n._v(" "),e("div",{staticClass:"bottomBar"},[e("router-link",{staticClass:"left",attrs:{to:"/home/vue/init"}},[e("span",{staticClass:"fa fa-angle-double-left"}),n._v(" "),e("span",[n._v("init")])]),n._v(" "),e("router-link",{staticClass:"right",attrs:{to:"/home/vue/use"}},[e("span",[n._v("配置包")]),n._v(" "),e("span",{staticClass:"fa fa-angle-double-right"})])],1)])},staticRenderFns:[]};var dn=e("Z0/y")({name:"vue-package"},mn,!1,function(n){e("NPOC")},"data-v-44ae3508",null).exports,fn={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"page"},[e("h3",[n._v("使用依赖包")]),n._v(" "),n._m(0),n._v(" "),e("div",{staticClass:"bottomBar"},[e("router-link",{staticClass:"left",attrs:{to:"/home/vue/package"}},[e("span",{staticClass:"fa fa-angle-double-left"}),n._v(" "),e("span",[n._v("npm包")])]),n._v(" "),e("router-link",{staticClass:"right",attrs:{to:"/home/vue/proxy"}},[e("span",[n._v("代理")]),n._v(" "),e("span",{staticClass:"fa fa-angle-double-right"})])],1)])},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ul",[e("li",[e("h3",[n._v("使用element-ui")]),n._v(" "),e("pre",[n._v("        ﹂src\n            ﹂main.js\n          import ElementUI from 'element-ui'\n          import 'element-ui/lib/theme-chalk/index.css'\n          new Vue({\n            el: '#app',\n            router,\n            store,\n            echarts,\n            components: { App },\n            template: '<App/>'\n          })\n          Vue.use(ElementUI)\n      ")])]),n._v(" "),e("li",[e("h3",[n._v("使用 axios")]),n._v(" "),e("pre",[n._v("      ﹂src\n        ﹂main.js\n      import axios from 'axios'\n      请求拦截\n          // 添加请求拦截器\n              axios.interceptors.request.use(function (config) {\n                  // 在发送请求之前做些什么\n                  return config\n              }, function (error) {\n                  // 对请求错误做些什么\n                  return Promise.reject(error)\n              })\n          // 添加响应拦截器\n              axios.interceptors.response.use(function (response) {\n                  // 对响应数据做点什么\n                  return response\n              }, function (error) {\n                  // 对响应错误做点什么\n                   return Promise.reject(error)\n              })\n      Vue.prototype.$http = axios\n      ")])]),n._v(" "),e("li",[e("h3",[n._v("使用echart")]),n._v(" "),e("pre",[n._v("        ﹂src\n          ﹂main.js\n          import echarts from 'echarts'\n          Vue.prototype.echarts = echarts\n\n          new Vue({\n              el: '#app',\n              router,\n              store,\n              echarts,\n              components: { App },\n              template: '<App/>'\n          })\n      ")])]),n._v(" "),e("li",[e("h4",[n._v("使用vuex")]),n._v(" "),e("pre",[n._v("        ﹂src\n          ﹂store # 创建文件夹\n              ﹂store.js # 创建该文件\n              import Vue from 'vue'\n              import Vuex from 'vuex'\n              import mutations from './mutations'  #引入文件\n              Vue.use(Vuex)\n\n              export default new Vuex.Store({\n                state: {\n                  count: 0\n                },\n                mutations\n            })\n        ﹂src\n          ﹂store # 创建文件夹\n            ﹂mutations.js # 创建该文件\n\n            const mutations = {\n                addition: state => state.count++,\n                minus: state => state.count--,\n                setZero: state => {\n                  state.count = 0\n                }\n            }\n            export default mutations\n      ")])]),n._v(" "),e("li",[e("h4",[n._v("使用base64 (上传图片，本地显示)")]),n._v(" "),e("pre",[n._v("        ﹂src\n          ﹂main.js\n        Vue.prototype.Base64 = require('js-base64').Base64\n        语法\n        this.Base64.encode('小飼弾');    // 5bCP6aO85by+\n        this.Base64.encodeURI('小飼弾'); // 5bCP6aO85by-\n\n        this.Base64.decode('5bCP6aO85by+');  // 小飼弾\n        // note .decodeURI() is unnecessary since it accepts both flavors\n        this.Base64.decode('5bCP6aO85by-');  // 小飼弾\n      ")])]),n._v(" "),e("li",[e("h4",[n._v("使用less")]),n._v(" "),e("pre",[n._v('        ﹂src\n          ﹂webpack.base.conf.js\n        {\n            test: /\\.less$/,\n            loader: "style-loader!css-loader!less-loader"\n         }\n      ')])]),n._v(" "),e("li",[e("h4",[n._v("使用路由卫士(为了防止路由随意输入而设置错误返回)")]),n._v(" "),e("pre",[n._v("        ﹂src\n            ﹂router\n                ﹂index.js\n\n        import Vue from 'vue'\n        import Router from 'vue-router'\n        import login from '@/components/login'\n        Vue.use(Router)\n        let routes = [\n          {path: '/login',name: 'login',component: login}\n        ]\n        const router = new Router({\n          history: true,\n          routes: routes\n        })\n        router.beforeEach((to, from, next) => {\n          if (to['redirectedFrom']) { // 防止一级路由混乱\n            let str = new RegExp(to['redirectedFrom'])\n            if (str.test(from['fullPath']) === true) {\n              return\n            }\n          }\n          if (to.matched.length === 0) { // 错误返回\n            from.name ? next({ name: from.name }) : next('/login')\n          } else {\n            next()\n          }\n        })\n        export default router\n      ")])]),n._v(" "),e("li",[e("h4",[n._v("使用图标字体font-awesome")]),n._v(" "),e("pre",[n._v("        ﹂src\n          ﹂main.js\n        import 'font-awesome/css/font-awesome.min.css'\n      ")])])])}]};var gn=e("Z0/y")({name:"vue-use",data:function(){return{msg:"this is vue-use"}}},fn,!1,function(n){e("upux")},"data-v-ca3197c0",null).exports,yn={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"page"},[e("h3",[n._v("代理设置")]),n._v(" "),e("pre",[n._v("    ﹂config\n       ﹂index.js\n\n          module.exports = {\n              dev: {\n                // Paths\n                assetsSubDirectory: 'static',\n                assetsPublicPath: '/',\n                proxyTable: { // 跨域配置代理\n                  '/controller/': {\n                    target: 'http://10.10.97.202',\n                    changeOrigin: true,\n                    pathRewrite: {\n                      '^/controller': '/controller'\n                    }\n                  },\n                  '/store/': {\n                    target: 'http://10.10.97.202',\n                    changeOrigin: true,\n                    pathRewrite: {\n                      '^/store': '/store'\n                    }\n                  }\n                },\n                host: '0.0.0.0', // 让项目让别的电脑也可以访问\n                port: 8080, // 修改端口\n        改完后,重启项目    npm run dev\n  ")]),n._v(" "),e("div",{staticClass:"bottomBar"},[e("router-link",{staticClass:"left",attrs:{to:"/home/vue/use"}},[e("span",{staticClass:"fa fa-angle-double-left"}),n._v(" "),e("span",[n._v("配置包")])]),n._v(" "),e("router-link",{staticClass:"right",attrs:{to:"/home/vue/build"}},[e("span",[n._v("发布")]),n._v(" "),e("span",{staticClass:"fa fa-angle-double-right"})])],1)])},staticRenderFns:[]};var bn=e("Z0/y")({name:"vue-proxy"},yn,!1,function(n){e("Kjw2")},"data-v-7dbe686c",null).exports,xn={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"page"},[e("h3",[n._v("发布项目")]),n._v(" "),e("pre",[n._v("    修改发布路径\n\n    ﹂config\n        ﹂index.js\n        build: {\n            // Template for index.html\n            index: path.resolve(__dirname, '../../facegateCompiled/index.html'), # 原始的 ../dist\n            // Paths\n            assetsRoot: path.resolve(__dirname, '../../facegateCompiled'),       # 原始的 ../dist\n            assetsSubDirectory: 'static',\n            assetsPublicPath: '/',\n    npm run build\n  ")]),n._v(" "),e("div",{staticClass:"bottomBar"},[e("router-link",{staticClass:"left",attrs:{to:"/home/vue/proxy"}},[e("span",{staticClass:"fa fa-angle-double-left"}),n._v(" "),e("span",[n._v("代理")])]),n._v(" "),e("router-link",{staticClass:"right",attrs:{to:"/home/vue/layout"}},[e("span",[n._v("懒加载")]),n._v(" "),e("span",{staticClass:"fa fa-angle-double-right"})])],1)])},staticRenderFns:[]};var Cn=e("Z0/y")({name:"vue-build",data:function(){return{msg:"this is vue-build"}}},xn,!1,function(n){e("zWEq")},"data-v-53b9622c",null).exports,En={render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"page"},[e("h3",[n._v("懒加载")]),n._v(" "),e("pre",[n._v("    ﹂src\n      ﹂router\n        ﹂index.js\n    import vueDocs from '@/components/vue/vueDocs'\n    改为:\n    const vueDocs = (resolve) => {\n      import('@/components/vue/vueDocs').then((module) => {\n        resolve(module)\n      })\n    }\n  ")]),n._v(" "),e("h3",[n._v("or")]),n._v(" "),e("pre",[n._v("    const vueInit = () => import('@/components/vue/vueInit')\n  ")]),n._v(" "),e("h3",[n._v("你要把零散的小文件组合成块文件？没问题")]),n._v(" "),e("pre",[n._v("    const nginx = () => import(/* webpackChunkName: \"group-nginx\" */ '@/components/nginx/nginx')\n    const wechatHttp = () => import(/* webpackChunkName: \"group-nginx\" */'@/components/nginx/wechat_http')\n    const wechatHttps = () => import(/* webpackChunkName: \"group-nginx\" */'@/components/nginx/wechat_https')\n  ")]),n._v(" "),e("div",{staticClass:"bottomBar"},[e("router-link",{staticClass:"center",attrs:{to:"/home/vue/build"}},[e("span",{staticClass:"fa fa-angle-double-left"}),n._v(" "),e("span",[n._v("发布")])])],1)])},staticRenderFns:[]};var kn=e("Z0/y")({name:"vue-layout"},En,!1,function(n){e("2t/w")},"data-v-17be48b5",null).exports,wn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("第一步，用钢笔绘制路径")]),this._v(" "),t("h3",[this._v("第二步，在'图层' => '新建填充图层 ' => '纯色'")])])}]};var jn=e("Z0/y")({name:"ps-s-v-g",data:function(){return{msg:"this is ps-s-v-g"}}},wn,!1,function(n){e("RpyC")},"data-v-6059892c",null).exports,$n={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("\n    换肤\n  ")]),this._v(" "),t("pre",[this._v("    使用less编译器\n\n    定义less文件:  colors.less\n\n    @h1Font: #333; // 标题\n    @h4Font: #666; // 副标题\n    @pFont:  #999; // 辅助文字\n\n    .style1{\n      .change(#E1E2E8 , #76abd3 ,#4785b8, all 0.5s linear); /* 宝蓝 [0,1,6] 蓝色 */\n    }\n    .style2{\n      .change(#E1E2E8,  #b88bcb,#9f35ff, all 0.5s linear); /* 紫色 */\n    }\n    .style3{\n      .change(#E1E2E8, #13cb89,#205527, all 0.5s linear); /* 宝石绿 */\n    }\n    .style0{\n      .change(#999, #333,#000, all 0.5s linear); /* 程序黑 */\n    }\n\n    在组件内调用\n\n    @import \"../../common/css/colors.less\";\n    .change(@background, @shallow, @deep, @transition) {\n      .lookup {\n        background: @background;\n        transition: @transition;\n      }\n    }\n\n    在换肤按钮所在组件\n\n    export default {\n      name: 'm-header',\n      methods: {\n        changeStyle (num) {\n          document.body.className = 'style' + num\n          window.localStorage.setItem('skin', num)\n        }\n      },\n      created () {\n        let num = window.localStorage.getItem('skin')\n        if (num) {\n          document.body.className = 'style' + num\n        } else {\n          document.body.className = 'style1'\n        }\n      }\n    }\n  ")])])}]};var Nn=e("Z0/y")({name:"skin"},$n,!1,function(n){e("qI2x")},"data-v-e6d6b1b0",null).exports,Fn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("数组对象的检测")]),this._v(" "),t("pre",[this._v("    增加 || 改变值\n\n    selectPic () {\n      for (let i = 0; this.$refs.fileList.files.length > i; i++) {\n        let r = new FileReader()\n        r.onload = () => {\n          this.$set(this.imgs, i, {}) // 让vue检测到长度变动\n          this.$set(this.imgs[i], 'url', r.result) // 让vue检测到属性变动\n        }\n        r.readAsDataURL(this.$refs.fileList.files[i])// Base64\n      }\n      // this.imgs = arr\n    }\n    改进\n    selectPic () {\n      let len = this.$refs.fileList.files.length + this.imgs.length\n      for (let i = this.imgs.length, c = 0; len > i; i++) {\n        let r = new FileReader()\n        r.onload = () => {\n          this.$set(this.imgs, i, {})\n          this.$set(this.imgs[i], 'url', r.result)\n        }\n        r.readAsDataURL(this.$refs.fileList.files[c])// Base64\n        c++\n      }\n      this.$refs.fileList.value = null\n    }\n\n    删除值\n    this.$delete(target, key)\n    target (Array||Object)\n  ")])])}]};var Rn=e("Z0/y")({name:"list-object",data:function(){return{msg:"this is list-object"}}},Fn,!1,function(n){e("QdPq")},"data-v-6ff4826f",null).exports,Dn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("通用数据或方法")]),this._v(" "),t("pre",[this._v("    ﹂src\n      ﹂common (创建)\n        ﹂mixin.js\n\n    export const dateFrom = {\n      data () {\n        return {\n          pickerOptions2: {\n            shortcuts: [{\n              text: '最近一周',\n              onClick (picker) {\n                const end = new Date()\n                const start = new Date()\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n                picker.$emit('pick', [start, end])\n              }\n            }, {\n              text: '最近一个月',\n              onClick (picker) {\n                const end = new Date()\n                const start = new Date()\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n                picker.$emit('pick', [start, end])\n              }\n            }, {\n              text: '最近三个月',\n              onClick (picker) {\n                const end = new Date()\n                const start = new Date()\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n                picker.$emit('pick', [start, end])\n              }\n            }]\n          }\n        }\n      }\n    }\n\n    组件中引用\n\n    < script >\n    import {dateFrom} from 'common/js/mixin'\n    export default {\n      mixins: [dateFrom],\n      name: 'new',\n      data () {\n  ")])])}]};var An=e("Z0/y")({name:"mixin",data:function(){return{msg:"this is mixin"}}},Dn,!1,function(n){e("4gK4")},"data-v-6956d35e",null).exports,Bn={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"django"},[t("router-view")],1)},staticRenderFns:[]};var zn=e("Z0/y")({name:"django"},Bn,!1,function(n){e("uc+R")},"data-v-7794ee8a",null).exports,Tn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("Django教程还需看 "),t("a",{attrs:{href:"https://code.ziqiangxuetang.com/django/django-tutorial.html"}},[this._v("《自强学堂》")]),this._v("的比较好")]),this._v(" "),t("pre",[this._v("    pip install Django==1.11.12\n    django-admin startproject  项目名称  # 虚拟环境中运行最好\n  ")])])}]};var Ln=e("Z0/y")({name:"django-install",data:function(){return{msg:"django-install"}}},Tn,!1,function(n){e("jvP9")},"data-v-41c0b4dc",null).exports,Zn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("window配置")]),this._v(" "),t("pre",[this._v("    pip install virtualenv virtualenvwrapper-win\n\n    【可选】Windows下默认虚拟环境是放在用户名下面的Envs中的，与桌面，我的文档，下载等文件夹在一块的。\n    更改方法：计算机，属性，高级系统设置，环境变量，添加'变量名'WORKON_HOME，'变量值' e:\\Envs\\\n  ")]),this._v(" "),t("h3",[this._v("指令")]),this._v(" "),t("pre",[this._v("    mkvirtualenv LST：创建运行环境LST\n\n    workon TCL: 工作在 zqxt 环境 或 从其它环境切换到 TCL 环境\n\n    deactivate: 退出终端环境\n\n    其它的：\n\n    rmvirtualenv ENV：删除运行环境ENV\n\n    mkproject mic：创建mic项目和运行环境mic\n\n    mktmpenv：创建临时运行环境\n\n    lsvirtualenv: 列出可用的运行环境\n\n    lssitepackages: 列出当前环境安装了的包\n\n    创建的环境是独立的，互不干扰，无需sudo权限即可使用 pip 来进行包的管理。\n  ")])])}]};var Sn=e("Z0/y")({name:"virtualenv",data:function(){return{msg:"virtualenv"}}},Zn,!1,function(n){e("AJdz")},"data-v-2e16ad0c",null).exports,Pn={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"js"},[t("router-view")],1)},staticRenderFns:[]};var In=e("Z0/y")({name:"js.vue",data:function(){return{msg:"this is js.vue"}}},Pn,!1,function(n){e("q2Ef")},"data-v-08544bc8",null).exports,Hn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("对象的深度拷贝(1)")]),this._v(" "),t("pre",[this._v("    var obj = {a:{b:10}};\n    function deepCopy(obj){\n      if(typeof obj != 'object'){\n          return obj;\n      }\n      var newobj = {};\n      for ( var attr in obj) {\n          newobj[attr] = deepCopy(obj[attr]);\n      }\n      return newobj;\n    }\n    var obj2 = deepCopy(obj);\n    obj2.a.b = 20;\n    alert(obj.a.b); //10\n  ")]),this._v(" "),t("h3",[this._v("深拷贝(2)")]),this._v(" "),t("pre",[this._v('    function clone(obj) {\n      let copy;\n      // Handle the 3 simple types, and null or undefined\n      if (null == obj || "object" != typeof obj) return obj;\n      // Handle Date\n      if (obj instanceof Date) {\n          copy = new Date();\n          copy.setTime(obj.getTime());\n          return copy;\n      }\n      // Handle Array\n      if (obj instanceof Array) {\n          copy = [];\n          for (var i = 0, len = obj.length; len > i; i++) {\n              copy[i] = clone(obj[i]);\n          }\n          return copy;\n      }\n      // Handle Object\n      if (obj instanceof Object) {\n          copy = {};\n          for (var attr in obj) {\n              if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n          }\n          return copy;\n      }\n      throw new Error("Unable to copy obj! Its type isn\'t supported.");\n    }\n  ')])])}]};var On=e("Z0/y")({name:"deep-copy",data:function(){return{msg:"this is deep-copy"}}},Hn,!1,function(n){e("8meU")},"data-v-6061a718",null).exports,Un={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"linux"},[t("router-view")],1)},staticRenderFns:[]};var qn=e("Z0/y")({name:"linux-unbuntu",data:function(){return{msg:"this is linux-unbuntu"}}},Un,!1,function(n){e("HP5O")},"data-v-52ab5cce",null).exports,Mn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("压缩和解压")]),this._v(" "),t("pre",[this._v("    tar\n        -c: 建立压缩档案\n        -x：解压\n        -t：查看内容\n        -r：向压缩归档文件末尾追加文件\n        -u：更新原压缩包中的文件\n\n        这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。\n\n        -z：有gzip属性的\n        -j：有bz2属性的\n        -Z：有compress属性的\n        -v：显示所有过程\n        -O：将文件解开到标准输出\n\n        下面的参数-f是必须的\n\n        -f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。\n\n        # tar -cf all.tar *.jpg\n        这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。\n\n        # tar -rf all.tar *.gif\n        这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。\n\n        # tar -uf all.tar logo.gif\n        这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n        # tar -tf all.tar\n        这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n        # tar -xf all.tar\n        这条命令是解出all.tar包中所有文件，-x是解开的意思\n\n        压缩\n        tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg\n        tar –czf jpg.tar.gz *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz\n        tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2\n        tar –cZf jpg.tar.Z *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z\n        rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for Linux\n        zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux\n\n        解压\n        tar –xvf file.tar //解压 tar包\n        tar -xzvf file.tar.gz //解压tar.gz\n        tar -xjvf file.tar.bz2   //解压 tar.bz2\n        tar –xZvf file.tar.Z   //解压tar.Z\n        unrar e file.rar //解压rar\n        unzip file.zip //解压zip\n\n        总结\n        1、*.tar 用 tar –xvf 解压\n        2、*.gz 用 gzip -d或者gunzip 解压\n        3、*.tar.gz和*.tgz 用 tar –xzf 解压\n        4、*.bz2 用 bzip2 -d或者用bunzip2 解压\n        5、*.tar.bz2用tar –xjf 解压\n        6、*.Z 用 uncompress 解压\n        7、*.tar.Z 用tar –xZf 解压\n        8、*.rar 用 unrar e解压\n        9、*.zip 用 unzip 解压\n  ")])])}]};var Vn=e("Z0/y")({name:"tar",data:function(){return{msg:"this is tar"}}},Mn,!1,function(n){e("tfRm")},"data-v-4321026b",null).exports,Gn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("地图服务器相关知识")]),this._v(" "),t("pre",[this._v('    sudo fdisk -l\n\n    Disk /dev/sdd: 2 TiB, 2199023255552 bytes, 4294967296 sectors      ## 为挂载硬盘\n    Units: sectors of 1 * 512 = 512 bytes\n    Sector size (logical/physical): 512 bytes / 512 bytes\n    I/O size (minimum/optimal): 512 bytes / 512 bytes\n\n    Disk /dev/sda: 30 GiB, 32212254720 bytes, 62914560 sectors         ## 已挂载硬盘\n    Units: sectors of 1 * 512 = 512 bytes\n    Sector size (logical/physical): 512 bytes / 512 bytes\n    I/O size (minimum/optimal): 512 bytes / 512 bytes\n    Disklabel type: gpt\n    Disk identifier: 634C3D5B-0D0D-474F-9F67-F1215DC3BD18\n\n    Device        Start      End  Sectors  Size Type                   # 标识\n    /dev/sda1      2048  1050623  1048576  512M EFI System\n    /dev/sda2   1050624 46141439 45090816 21.5G Linux filesystem\n    /dev/sda3  46141440 62912511 16771072    8G Linux swap\n\n    // /dev/sdb\n\n    GPT(GUID)分区(推荐使用）\n\n    用parted工具, 既可以GPS, 也可以MBR\n\n    sudo parted  # 进入parted工具，输入help可查看帮助\n\n    select /dev/sda  # 选择你要操作的设备，一定要注意，不要把默认设备误操作了\n\n    mklabel gpt  # 设定使用的分区类型, 如果要用MBR分区，输入msdos即可。\n\n    mkpart  # 添加一个分区\n\n    输入分区名称，回车\n\n    输入使用哪种文件系统，默认ext2，回车 （此处可以随意选，之后重新格式化写入文件系统）\n\n    输入分区从第几Mb的位置开始，输入1，从第1Mb开始（最好不要从0开始）\n\n    输入分区从第几Mb结束，输入2000，第2000Mb结束\n\n    此时已经分区成功，输入print查看目前分区情况\n\n    ctrl + D 退出程序\n\n    格式化调整inode大小  （上限是2^32个inode节点）\n    mkfs.ext3 /dev/sda6 -N 18276352\n\n    于是我查了下google，发现ext2/3是128字节，ext4是256字节，以下是ext2/ext4对应的结构。\n\n    sudo mount /dev/sdb1 /var/www/html/17\n\n    查看是否成功  lsblk\n\n    $ sudo blkid /dev/sdb1 #UUID磁盘唯一标识，设置自动挂载\n\n    # 设置系统启动，自动挂载分区\n    $ sudo vim /etc/fstab #fstab文件，每次重启会读取这个文件对磁盘进行自动挂载\n    # 添加如下的挂载项\n    UUID=5bbe4e3b-2870-4ddd-93a8-86fcb0692e6f /data ext4 errors=remount-ro 0 1\n\n    # 获取/dev/sdb1 的 uuid\n    $ sudo blkid /dev/sdb1 #UUID磁盘唯一标识，设置自动挂载\n    /dev/sdb1: UUID="5bbe4e3b-2870-4ddd-93a8-86fcb0692e6f" TYPE="ext4" PARTLABEL="Linux filesystem"\n    PARTUUID="b0292da5-5457-4077-bfba-9339306bc0c1"\n    # 设置系统启动，自动挂载分区\n    $ sudo vim /etc/fstab #fstab文件，每次重启会读取这个文件对磁盘进行自动挂载\n    # 添加如下的挂载项\n    UUID=5bbe4e3b-2870-4ddd-93a8-86fcb0692e6f /data ext4 errors=remount-ro 0 1\n\n    # 查看硬盘挂载\n    df -h\n    直接卸载\n    umount /dev/sda6\n    直接挂载\n    mount /dev/sda6 ./test\n    查看结果\n    df -h\n\n    # 查看inode使用率\n    df -i\n  ')])])}]};var Yn=e("Z0/y")({name:"map-server",data:function(){return{msg:"this is map-server"}}},Gn,!1,function(n){e("0NFd")},"data-v-2b504e0a",null).exports,Wn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"page"},[t("h3",[this._v("删除文件夹")]),this._v(" "),t("pre",[this._v("    sudo rm -rf 文件夹名            # 遍历删除整个文件夹\n    sudo rm -rf 文件夹名/*          # 遍历删除文件夹，但是不删除文件夹本身\n    sudo rm -rf !(文件名)           # 遍历删除当前目录的所有内容，但是不不包括括号内的文件\n    sudo rm -rf !(文件名|文件名)    # 遍历删除当前目录的所有内容，但是不不包括括号内的多个文件\n  ")])])}]};var Xn=e("Z0/y")({name:"delete",data:function(){return{msg:"this is delete"}}},Wn,!1,function(n){e("LNMR")},"data-v-3f8216e5",null).exports;i.default.use(a.a);var Jn=[{path:"/home",name:"home",component:c,redirect:"/home/vue",children:[{path:"/home/vue",component:hn,redirect:"/home/vue/init",children:[{path:"/home/vue/init",component:vn},{path:"/home/vue/package",component:dn},{path:"/home/vue/use",component:gn},{path:"/home/vue/proxy",component:bn},{path:"/home/vue/build",component:Cn},{path:"/home/vue/layout",component:kn},{path:"/home/vue/ps",component:jn},{path:"/home/vue/skin",component:Nn},{path:"/home/vue/listObj",component:Rn},{path:"/home/vue/mixin",component:An}]},{path:"/home/git",component:u,redirect:"/home/git/reset",children:[{component:_,path:"/home/git/reset"},{component:m,path:"/home/git/force"}]},{path:"/home/Django",component:zn,redirect:"/home/Django/install",children:[{component:Ln,path:"/home/Django/install"},{component:Sn,path:"/home/Django/virtualenv"}]},{path:"/home/python",component:f,redirect:"/home/python/pythonbase",children:[{component:$,path:"/home/python/pythonbase",redirect:"/home/python/pythonBase/variable",children:[{component:D,path:"/home/python/pythonBase/variable"},{component:F,path:"/home/python/pythonBase/pythonType"},{component:B,path:"/home/python/pythonBase/Format"},{component:T,path:"/home/python/pythonBase/conversion"},{component:Z,path:"/home/python/pythonBase/loop"},{component:P,path:"/home/python/pythonBase/string"},{component:H,path:"/home/python/pythonBase/list"},{component:U,path:"/home/python/pythonBase/tuple"},{component:M,path:"/home/python/pythonBase/dictionary"},{component:G,path:"/home/python/pythonBase/ergodic"},{component:W,path:"/home/python/pythonBase/operator"}]},{component:J,path:"/home/python/pythonCore",redirect:"/home/python/pythonCore/function",children:[{component:Q,path:"/home/python/pythonCore/function"},{component:tn,path:"/home/python/pythonCore/recursion"},{component:rn,path:"/home/python/pythonCore/file"}]},{component:y,path:"/home/python/postgresql"},{component:x,path:"/home/python/postgresqlCore"},{component:E,path:"/home/python/getopt"},{component:w,path:"/home/python/pythonScript"}]},{path:"/home/nginx",component:an,redirect:"/home/nginx/http",children:[{component:ln,path:"/home/nginx/http"},{component:pn,path:"/home/nginx/wechat_https"}]},{path:"/home/js",component:In,redirect:"/home/js/deepCopy",children:[{component:On,path:"/home/js/deepCopy"}]},{path:"/home/linux",component:qn,redirect:"/home/linux/tar",children:[{component:Vn,path:"/home/linux/tar"},{component:Yn,path:"/home/linux/map"},{component:Xn,path:"/home/linux/delete"}]}]}],Kn=new a.a({history:!0,routes:Jn});Kn.beforeEach(function(n,t,e){if(n.redirectedFrom&&!0===new RegExp(n.redirectedFrom).test(t.fullPath))return;0===n.matched.length?t.name?e({name:t.name}):e("/home"):e()});var Qn=Kn,nt=e("wi/X"),tt=e.n(nt),et=(e("ENLC"),e("aozt")),rt=e.n(et),st={render:function(){var n=this.$createElement,t=this._self._c||n;return t("div",{attrs:{id:"app"}},[t("router-view")],1)},staticRenderFns:[]};var it=e("Z0/y")({name:"App"},st,!1,function(n){e("NmNn")},null,null).exports,at=e("9rMa"),ot={addition:function(n){return n.count++},minus:function(n){return n.count--},setZero:function(n){n.count=0}};i.default.use(at.a);var lt=new at.a.Store({state:{count:0},mutations:ot}),ct=e("XMw0"),pt=e.n(ct);e("uxEr"),e("CxKM");rt.a.interceptors.request.use(function(n){return n},function(n){return s.a.reject(n)}),rt.a.interceptors.response.use(function(n){return n},function(n){return s.a.reject(n)}),i.default.prototype.echarts=pt.a,i.default.prototype.$http=rt.a,i.default.use(tt.a),i.default.config.productionTip=!1,i.default.prototype.Base64=e("dQe3").Base64,new i.default({el:"#app",router:Qn,store:lt,echarts:pt.a,components:{App:it},template:"<App/>"})},NPOC:function(n,t){},NaI6:function(n,t){},NmNn:function(n,t){},Nzen:function(n,t){},PMlw:function(n,t){},QdPq:function(n,t){},RpyC:function(n,t){},Y0a4:function(n,t){},cJWs:function(n,t){},fqLT:function(n,t){},jHOY:function(n,t){},jRFS:function(n,t,e){n.exports=e.p+"index/static/img/lst.e12cf45.png"},jvP9:function(n,t){},"l/o7":function(n,t){},n6HO:function(n,t){},nqhA:function(n,t){},odZ8:function(n,t){},pJEu:function(n,t){},q2Ef:function(n,t){},qI2x:function(n,t){},"r/3s":function(n,t){},sn1t:function(n,t){},tfRm:function(n,t){},"uc+R":function(n,t){},uj47:function(n,t){},upux:function(n,t){},uxEr:function(n,t){},vIWL:function(n,t){},x0Hd:function(n,t){},xjeC:function(n,t){},zWEq:function(n,t){},"zmd+":function(n,t){}},["NHnr"]);
//# sourceMappingURL=app.7c6bbc6fe92326fd97da.js.map